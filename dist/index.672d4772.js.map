{"mappings":"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","sources":["script.js"],"sourcesContent":["'use strict';\n\nconst form = document.querySelector('.form');\nconst containerWorkouts = document.querySelector('.workouts');\nconst inputType = document.querySelector('.form__input--type');\nconst inputDistance = document.querySelector('.form__input--distance');\nconst inputDuration = document.querySelector('.form__input--duration');\nconst inputCadence = document.querySelector('.form__input--cadence');\nconst inputElevation = document.querySelector('.form__input--elevation');\n\nclass Workout {\n  date = new Date();\n  id = (Date.now() + '').slice(-10);\n\n  constructor(coords, distance, duration) {\n    this.coords = coords;\n    this.distance = distance;\n    this.duration = duration;\n  }\n\n  _setDescription() {\n    // prettier-ignore\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} on ${\n      months[this.date.getMonth()]\n    } ${this.date.getDate()}`;\n  }\n}\n\nclass Running extends Workout {\n  type = 'running';\n\n  constructor(coords, distance, duration, cadence) {\n    super(coords, distance, duration);\n    this.cadence = cadence;\n    this.calcPace();\n    this._setDescription();\n  }\n\n  calcPace() {\n    //min/km\n    this.pace = this.duration / this.distance;\n    return this.pace;\n  }\n}\n\nclass Cycling extends Workout {\n  type = 'cycling';\n\n  constructor(coords, distance, duration, elevation) {\n    super(coords, distance, duration);\n    this.elevation = elevation;\n    this.calcSpeed();\n    this._setDescription();\n  }\n\n  calcSpeed() {\n    //km/hr\n    this.speed = this.distance / (this.duration / 60);\n    return this.speed;\n  }\n}\n\n//////////////////////////////////\n//APPLICATION ARCHITECTURE\nclass App {\n  #map;\n  #mapZoomLevel = 15;\n  #mapEvent;\n  #workouts = [];\n\n  constructor() {\n    //Get position of the user\n    this._getPosition();\n\n    //Get data from the local storage\n    this._getLocalStorage();\n\n    //Add eventListeners to HTML elements\n    form.addEventListener('submit', this._newWorkout.bind(this));\n    inputType.addEventListener('change', this._toggleElevationField);\n    containerWorkouts.addEventListener('click', this._moveToPopup.bind(this));\n  }\n\n  _getPosition() {\n    if (navigator.geolocation)\n      navigator.geolocation.getCurrentPosition(\n        this._loadMap.bind(this),\n        function () {\n          alert(\"Can't access the location\");\n        }\n      );\n  }\n\n  _loadMap(position) {\n    //   console.log(position);\n    const { latitude } = position.coords;\n    const { longitude } = position.coords;\n    console.log(`https://www.google.com/maps/@${latitude},${longitude}`);\n\n    const coords = [latitude, longitude];\n\n    this.#map = L.map('map').setView(coords, this.#mapZoomLevel);\n\n    this.#workouts.forEach(work => {\n      this._renderWorkoutMarker(work);\n    });\n\n    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(this.#map);\n\n    this.#map.on('click', this._showForm.bind(this));\n  }\n\n  _showForm(mapE) {\n    this.#mapEvent = mapE;\n    form.classList.remove('hidden');\n    inputDistance.focus();\n  }\n\n  _hideForm() {\n    inputDistance.value =\n      inputCadence.value =\n      inputDuration.value =\n      inputElevation.value =\n        '';\n\n    form.style.display = 'none';\n    form.classList.add('hidden');\n    setTimeout(() => (form.style.display = 'grid'), 1000);\n  }\n\n  _toggleElevationField() {\n    inputElevation.closest('.form__row').classList.toggle('form__row--hidden');\n    inputCadence.closest('.form__row').classList.toggle('form__row--hidden');\n  }\n\n  _newWorkout(e) {\n    e.preventDefault();\n\n    const validInputs = (...inputs) =>\n      inputs.every(inp => Number.isFinite(inp));\n    // Determines whether all the members of an array satisfy the specified test. Returns boolean\n\n    const allPositive = (...inputs) => inputs.every(inp => inp > 0);\n\n    //Get data from form\n    const type = inputType.value;\n    const distance = +inputDistance.value;\n    const duration = +inputDuration.value;\n    const { lat, lng } = this.#mapEvent.latlng;\n    let workout;\n\n    //If workout running, create running object\n    if (type === 'running') {\n      const cadence = +inputCadence.value;\n      //Check if data is valid\n      if (\n        // !Number.isFinite(distance) ||\n        // !Number.isFinite(duration) ||\n        // !Number.isFinite(cadence)\n        !validInputs(distance, duration, cadence) ||\n        !allPositive(distance, duration, cadence)\n      )\n        return alert('Input have to be positive number!');\n\n      workout = new Running([lat, lng], distance, duration, cadence);\n    }\n\n    //If workout cycling, create cycling object\n    if (type === 'cycling') {\n      const elevation = +inputElevation.value;\n\n      //Check if data is valid\n      if (\n        !validInputs(distance, duration, elevation) ||\n        !allPositive(distance, duration)\n      )\n        return alert('Input have to be positive numbers!');\n\n      workout = new Cycling([lat, lng], distance, duration, elevation);\n    }\n\n    //Add new object to workout array\n    this.#workouts.push(workout);\n\n    //Render workout on map as marker\n    this._renderWorkoutMarker(workout);\n\n    //Render workout on list\n    this._renderWorkout(workout);\n\n    //Hide form + clear input fields\n    this._hideForm();\n\n    //Store data in localeStorage\n    this._setLocalStorage();\n\n    // console.log(mapEvent);\n  }\n\n  _renderWorkoutMarker(workout) {\n    L.marker(workout.coords)\n      .addTo(this.#map)\n      .bindPopup(\n        L.popup({\n          maxWidth: 250,\n          minWidth: 100,\n          autoClose: false,\n          closeOnClick: false,\n          className: `${workout.type}-popup`,\n        })\n      )\n      .setPopupContent(\n        `${workout.type === 'running' ? '🏃‍♂️' : '🚴‍♂️'} ${workout.description}`\n      )\n      .openPopup();\n  }\n\n  _renderWorkout(workout) {\n    let html = `\n    <li class=\"workout workout--${workout.type}\" data-id=\"${workout.id}\">\n    <h2 class=\"workout__title\">${workout.description}</h2>\n    <div class=\"workout__details\">\n      <span class=\"workout__icon\">${\n        workout.type === 'running' ? '🏃‍♂️' : '🚴‍♂️'\n      }</span>\n      <span class=\"workout__value\">${workout.distance}</span>\n      <span class=\"workout__unit\">km</span>\n    </div>\n    <div class=\"workout__details\">\n      <span class=\"workout__icon\">⏱</span>\n      <span class=\"workout__value\">${workout.duration}</span>\n      <span class=\"workout__unit\">min</span>\n    </div>\n    `;\n\n    if (workout.type === 'running') {\n      html += `\n      <div class=\"workout__details\">\n            <span class=\"workout__icon\">⚡️</span>\n            <span class=\"workout__value\">${workout.pace.toFixed(1)}</span>\n            <span class=\"workout__unit\">min/km</span>\n          </div>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">🦶🏼</span>\n            <span class=\"workout__value\">${workout.cadence}</span>\n            <span class=\"workout__unit\">spm</span>\n          </div>\n        </li>\n      `;\n    }\n\n    if (workout.type === 'cycling') {\n      html += `\n      <div class=\"workout__details\">\n            <span class=\"workout__icon\">⚡️</span>\n            <span class=\"workout__value\">${workout.speed.toFixed(1)}</span>\n            <span class=\"workout__unit\">km/h</span>\n          </div>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">⛰</span>\n            <span class=\"workout__value\">${workout.elevation}</span>\n            <span class=\"workout__unit\">m</span>\n          </div>\n        </li>\n      `;\n    }\n\n    form.insertAdjacentHTML('afterend', html);\n  }\n\n  _moveToPopup(e) {\n    const workoutEl = e.target.closest('.workout');\n\n    if (!workoutEl) return;\n\n    const workout = this.#workouts.find(\n      work => work.id === workoutEl.dataset.id\n    );\n    console.log(workout);\n\n    this.#map.setView(workout.coords, this.#mapZoomLevel, {\n      animate: true,\n      pan: {\n        duration: 1,\n      },\n    });\n  }\n\n  _setLocalStorage() {\n    localStorage.setItem(\n      //Sets the value of the pair identified by key to value, creating a new key/value pair if none existed for key previously.\n      'workouts',\n      JSON.stringify(\n        //Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\n        this.#workouts\n      )\n    );\n  }\n\n  _getLocalStorage() {\n    const data = JSON.parse(localStorage.getItem('workouts'));\n\n    if (!data) return;\n\n    this.#workouts = data;\n\n    this.#workouts.forEach(work => {\n      this._renderWorkout(work);\n    });\n  }\n\n  reset() {\n    localStorage.removeItem('workouts');\n    location.reload();\n  }\n}\n\nconst app = new App();\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}